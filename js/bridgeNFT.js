var ether;async function connect(){if(console.log(from.dataset.idfrom),"zksync"==from.dataset.idfrom){const t=new ethers.providers.Web3Provider(window.ethereum,"any");await t.send("eth_requestAccounts",[]);const n=t.getSigner();try{await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:"0x144"}]})}catch(e){if(4902===e.code)try{await window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainId:"0x144",rpcUrls:["https://zksync2-mainnet.zksync.io"],nativeCurrency:{name:"zkSync Era",symbol:"ETH",decimals:18},chainName:"zkSync Era"}]})}catch(e){console.error(e)}console.error(e)}const a=(await t.getNetwork()).chainId;if(console.log(a),"324"==a)(e=document.getElementById("connect")).value="Connected",e.innerHTML="Connected zkSync",console.log("Account:",await n.getAddress())}if("nova"==from.dataset.idfrom){const t=new ethers.providers.Web3Provider(window.ethereum,"any");await t.send("eth_requestAccounts",[]);const n=t.getSigner();try{await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:"0xA4BA"}]})}catch(e){if(4902===e.code)try{await window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainId:"0xA4BA",rpcUrls:["https://nova.arbitrum.io/rpc"],nativeCurrency:{name:"Arbitrum Nova",symbol:"ETH",decimals:18},chainName:"Arbitrum Nova"}]})}catch(e){console.error(e)}console.error(e)}const a=(await t.getNetwork()).chainId;if(console.log(a),"42170"==a)console.log("Account:",await n.getAddress()),(e=document.getElementById("connect")).value="Connected",e.innerHTML="Connected Arb Nova"}if("zkevm"==from.dataset.idfrom){const t=new ethers.providers.Web3Provider(window.ethereum,"any");await t.send("eth_requestAccounts",[]);const n=t.getSigner();try{await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:"0x44D"}]})}catch(e){if(4902===e.code)try{await window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainId:"0x44D",rpcUrls:["https://zkevm-rpc.com"],nativeCurrency:{name:"Polygon zkEVM",symbol:"ETH",decimals:18},chainName:"Polygon zkEVM"}]})}catch(e){console.error(e)}console.error(e)}const a=(await t.getNetwork()).chainId;if(console.log(a),"1101"==a)console.log("Account:",await n.getAddress()),(e=document.getElementById("connect")).value="Connected",e.innerHTML="Connected Polygon zkEVM"}if("arbitrum"==from.dataset.idfrom){const t=new ethers.providers.Web3Provider(window.ethereum,"any");await t.send("eth_requestAccounts",[]);const n=t.getSigner();try{await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:"0xA4B1"}]})}catch(e){if(4902===e.code)try{await window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainId:"0xA4B1",rpcUrls:["https://arb1.arbitrum.io/rpc"],nativeCurrency:{name:"Arbitrum Internal",symbol:"ETH",decimals:18},chainName:"Arbitrum Internal"}]})}catch(e){console.error(e)}console.error(e)}const a=(await t.getNetwork()).chainId;if(console.log(a),"42161"==a)console.log("Account:",await n.getAddress()),(e=document.getElementById("connect")).value="Connected",e.innerHTML="Connected Arbitrum"}if("bnb"==from.dataset.idfrom){const t=new ethers.providers.Web3Provider(window.ethereum,"any");await t.send("eth_requestAccounts",[]);const n=t.getSigner();try{await window.ethereum.request({method:"wallet_switchEthereumChain",params:[{chainId:"0x38"}]})}catch(e){if(4902===e.code)try{await window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainId:"0x38",rpcUrls:["https://bsc-dataseed.binance.org/"],nativeCurrency:{name:"BSC Mainnet",symbol:"BNB",decimals:18},chainName:"BSC Mainnet"}]})}catch(e){console.error(e)}console.error(e)}const a=(await t.getNetwork()).chainId;var e;if(console.log(a),"56"==a)console.log("Account:",await n.getAddress()),(e=document.getElementById("connect")).value="Connected",e.innerHTML="Connected BNB Chain"}}const abi=[{inputs:[{internalType:"address",name:"_endpoint",type:"address"},{internalType:"uint256",name:"startId",type:"uint256"},{internalType:"uint256",name:"_max",type:"uint256"}],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint16",name:"_srcChainId",type:"uint16"},{indexed:!1,internalType:"address",name:"_from",type:"address"},{indexed:!1,internalType:"uint256",name:"_tokenId",type:"uint256"},{indexed:!1,internalType:"uint256",name:"counter",type:"uint256"}],name:"ReceiveNFT",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint16",name:"_dstChainId",type:"uint16"},{internalType:"bytes",name:"_destination",type:"bytes"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"crossChain",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"endpoint",outputs:[{internalType:"contract ILayerZeroEndpoint",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint16",name:"_dstChainId",type:"uint16"},{internalType:"address",name:"_userApplication",type:"address"},{internalType:"bytes",name:"_payload",type:"bytes"},{internalType:"bool",name:"_payInZRO",type:"bool"},{internalType:"bytes",name:"_adapterParams",type:"bytes"}],name:"estimateFees",outputs:[{internalType:"uint256",name:"nativeFee",type:"uint256"},{internalType:"uint256",name:"zroFee",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint16",name:"_srcChainId",type:"uint16"},{internalType:"bytes",name:"_from",type:"bytes"},{internalType:"uint64",name:"",type:"uint64"},{internalType:"bytes",name:"_payload",type:"bytes"}],name:"lzReceive",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"mint",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"}];async function mint(){let e="0.0005";"bnb"==from.dataset.idfrom&&(e="0.004"),"nova"==from.dataset.idfrom&&(cont="0x5B10aE182C297ec76fE6fe0E3Da7c4797ceDE02D"),"zksync"==from.dataset.idfrom&&(cont="0xD43A183C97dB9174962607A8b6552CE320eAc5aA"),"zkevm"==from.dataset.idfrom&&(cont="0xDC60fd9d2A4ccF97f292969580874De69E6c326E"),"arbitrum"==from.dataset.idfrom&&(cont="0x80be0f5B780E093B3F53bd5Df8D1cF09Aabf690f"),"bnb"==from.dataset.idfrom&&(cont="0xc162cf8C4C6697AB8e613CE0cd37c0AB97BA5a60");let t=cont;const n=new ethers.providers.Web3Provider(window.ethereum),a=(await n.getNetwork()).chainId;(console.log(a),"zksync"==from.dataset.idfrom)&&("324"!=a&&(console.log("abort"),(i=document.getElementById("mint")).value="Sending message... wait Metamask",i.innerHTML="Switch network to zkSync first and click again",abort()));"nova"==from.dataset.idfrom&&("42170"!=a&&(console.log("abort"),(i=document.getElementById("mint")).value="Sending message... wait Metamask",i.innerHTML="Switch network to Arbitrum Nova first and click again",abort()));"zkevm"==from.dataset.idfrom&&("1101"!=a&&(console.log("abort"),(i=document.getElementById("mint")).value="Sending message... wait Metamask",i.innerHTML="Switch network to Polygon zkEVM first and click again",abort()));"arbitrum"==from.dataset.idfrom&&("42161"!=a&&(console.log("abort"),(i=document.getElementById("mint")).value="Sending message... wait Metamask",i.innerHTML="Switch network to Arbitrum first and click again",abort()));"bnb"==from.dataset.idfrom&&("56"!=a&&(console.log("abort"),(i=document.getElementById("mint")).value="Sending message... wait Metamask",i.innerHTML="Switch network to BSC first and click again",abort()));try{const a=n.getSigner(),o=new ethers.Contract(t,abi,a),r={value:ethers.utils.parseEther(e)};(i=document.getElementById("mint")).value="Minting... wait Metamask",i.innerHTML="Minting... wait Metamask";const s=await o.mint(r);let d=await s.wait();console.log("confirmed :>> ",d);var i=document.getElementById("idnft");"zksync"==from.dataset.idfrom&&(i.value=parseInt(d.logs[2].topics[3],16)),"nova"==from.dataset.idfrom&&(i.value=parseInt(d.logs[0].topics[3],16)),"zkevm"==from.dataset.idfrom&&(i.value=parseInt(d.logs[0].topics[3],16)),"arbitrum"==from.dataset.idfrom&&(i.value=parseInt(d.logs[0].topics[3],16)),"bnb"==from.dataset.idfrom&&(i.value=parseInt(d.logs[0].topics[3],16)),(i=document.getElementById("mint")).value="Minting... wait Metamask",i.innerHTML="Mint NFT"}catch(e){if(-32603===e.code){if(e.data.message.includes("insufficient funds"))console.log("Check balances"),(i=document.getElementById("mint")).value="Minting... wait Metamask",i.innerHTML="Insufficient balance..."}if(4001===e.code){if(e.message.includes("User denied transaction"))console.log("Check balances"),(i=document.getElementById("mint")).value="Minting... wait Metamask",i.innerHTML="Mint  NFT"}}}async function execute(){"nova"==from.dataset.idfrom&&(cont="0x5B10aE182C297ec76fE6fe0E3Da7c4797ceDE02D"),"zksync"==from.dataset.idfrom&&(cont="0xD43A183C97dB9174962607A8b6552CE320eAc5aA"),"zkevm"==from.dataset.idfrom&&(cont="0xDC60fd9d2A4ccF97f292969580874De69E6c326E"),"arbitrum"==from.dataset.idfrom&&(cont="0x80be0f5B780E093B3F53bd5Df8D1cF09Aabf690f"),"bnb"==from.dataset.idfrom&&(cont="0xc162cf8C4C6697AB8e613CE0cd37c0AB97BA5a60");let e=cont;"nova"==to.dataset.idto&&(dest="0x5B10aE182C297ec76fE6fe0E3Da7c4797ceDE02D",chainid="175"),"bnb"==to.dataset.idto&&(dest="0xc162cf8C4C6697AB8e613CE0cd37c0AB97BA5a60",chainid="102"),"zkevm"==to.dataset.idto&&(dest="0xDC60fd9d2A4ccF97f292969580874De69E6c326E",chainid="158"),"optimism"==to.dataset.idto&&(dest="0xDC60fd9d2A4ccF97f292969580874De69E6c326E",chainid="111"),"avalanche"==to.dataset.idto&&(dest="0x9539C9F145D2bf0eb7ed0824fe8583CD62410D3E",chainid="106"),"arbitrum"==to.dataset.idto&&(dest="0x80be0f5B780E093B3F53bd5Df8D1cF09Aabf690f",chainid="110"),"polygon"==to.dataset.idto&&(dest="0xc162cf8C4C6697AB8e613CE0cd37c0AB97BA5a60",chainid="109"),"fantom"==to.dataset.idto&&(dest="0x80be0f5B780E093B3F53bd5Df8D1cF09Aabf690f",chainid="112"),"harmony"==to.dataset.idto&&(dest="0xDC60fd9d2A4ccF97f292969580874De69E6c326E",chainid="116"),"celo"==to.dataset.idto&&(dest="0xDC60fd9d2A4ccF97f292969580874De69E6c326E",chainid="125"),"meter"==to.dataset.idto&&(dest="0x1a77bB02FbA60251dCCC1611e7321D7Cf6F1fEeF",chainid="176"),"zksync"==to.dataset.idto&&(dest="0xb73445CAd0aaaFF5A30dA46d432D9B21E24C246a",chainid="165");let t=ethers.utils.solidityPack(["address","address"],[dest,cont]),n=chainid,a=document.getElementById("idnft").value,i=t,o=document.getElementById("feeds").value;try{const t=new ethers.providers.Web3Provider(window.ethereum),s=(await t.getNetwork()).chainId;if(console.log(s),"zksync"==from.dataset.idfrom)if("324"!=s)console.log("abort"),(r=document.getElementById("bridge")).value="Sending message... wait Metamask",r.innerHTML="Switch network to zkSync first and click again",abort();if("nova"==from.dataset.idfrom)if("42170"!=s)console.log("abort"),(r=document.getElementById("bridge")).value="Sending message... wait Metamask",r.innerHTML="Switch network to Arbitrum Nova first and click again",abort();if("zkevm"==from.dataset.idfrom)if("1101"!=s)console.log("abort"),(r=document.getElementById("bridge")).value="Sending message... wait Metamask",r.innerHTML="Switch network to Polygon zkEVM first and click again",abort();if("arbitrum"==from.dataset.idfrom)if("42161"!=s)console.log("abort"),(r=document.getElementById("bridge")).value="Sending message... wait Metamask",r.innerHTML="Switch network to Arbitrum first and click again",abort();if("bnb"==from.dataset.idfrom)if("56"!=s)console.log("abort"),(r=document.getElementById("bridge")).value="Sending message... wait Metamask",r.innerHTML="Switch network to BSC first and click again",abort();const d=t.getSigner(),c=new ethers.Contract(e,abi,d),m={value:ethers.utils.parseEther(o)};(r=document.getElementById("bridge")).value="Sending message... wait Metamask",r.innerHTML="Bridge nft... wait Metamask";const l=await c.crossChain(n,i,a,m);let u=await l.wait();console.log("transaction :>> ",l),console.log("confirmed :>> ",u),(r=document.getElementById("txid")).value="Send message",r.innerHTML="NFT ID: "+a+" successfully moved. TX id: "+l.hash,(r=document.getElementById("txlz")).value="Send message",r.innerHTML='Check on <a target="_blank" href="https://layerzeroscan.com/tx/'+l.hash+'">layerzeroscan.com</a>',(r=document.getElementById("bridge")).value="Send message",r.innerHTML="Bridge NFT",await l.wait(),hashToServer(l.hash)}catch(e){if(4001===e.code)console.log("user decline"),(r=document.getElementById("bridge")).value="Bridge NFT",r.innerHTML="Bridge NFT";if(-32603===e.code){var r;if(console.log("user decline"),(r=document.getElementById("bridge")).value="Send message",r.innerHTML="Error.. Try increase l0 fees",e.data.message.includes("insufficient"))console.log("Check balances"),(r=document.getElementById("bridge")).value="Insufficient balance...",r.innerHTML="Insufficient balance..."}}}async function hashToServer(e){hashhtostat='<a href="https://layerzeroscan.com/tx/'+e+'" target="_blank">'+e+"<a>";var t=new FormData;t.append("key1",hashhtostat),t.append("key2","value2");await fetch("../stat/form.php",{method:"POST",body:t})}